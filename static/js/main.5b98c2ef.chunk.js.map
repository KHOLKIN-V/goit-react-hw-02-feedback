{"version":3,"sources":["components/Container/Container.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedbackoptions.module.css","components/Container/Container.module.css"],"names":["Container","children","className","cs","FeedbackOptions","onGood","onNeutral","onBad","title","btnContainer","btn","onClick","Statistics","onTotal","onPositivePercentage","list","item","listTotal","App","state","good","neutral","bad","goodPlus","setState","old","neutralPlus","badPlus","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAOeA,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAGH,UAAnB,SAA+BC,K,gBCuBlBG,EAvBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACtB,qCACE,oBAAIL,UAAWC,IAAGK,MAAlB,mCACA,sBAAKN,UAAWC,IAAGM,aAAnB,UACE,wBAAQP,UAAWC,IAAGO,IAAKC,QAASN,EAApC,kBAGA,wBAAQH,UAAWC,IAAGO,IAAKC,QAASL,EAApC,qBAGA,wBAAQJ,UAAWC,IAAGO,IAAKC,QAASJ,EAApC,wB,gBCmBSK,EA7BI,SAAC,GAAD,IACjBP,EADiB,EACjBA,OACAC,EAFiB,EAEjBA,UACAC,EAHiB,EAGjBA,MACAM,EAJiB,EAIjBA,QAJiB,IAKjBC,4BALiB,MAKM,IALN,SAOjB,qCACE,oBAAIZ,UAAWC,IAAGK,MAAlB,wBACA,qBAAIN,UAAWC,IAAGY,KAAlB,UACE,qBAAIb,UAAWC,IAAGa,KAAlB,mBAA+BX,KAC/B,qBAAIH,UAAWC,IAAGa,KAAlB,sBAAkCV,KAClC,qBAAIJ,UAAWC,IAAGa,KAAlB,kBAA8BT,QAEhC,qBAAIL,UAAWC,IAAGc,UAAlB,UACE,qBAAIf,UAAWC,IAAGa,KAAlB,oBAAgCH,KAChC,qBAAIX,UAAWC,IAAGa,KAAlB,gCAA4CF,EAA5C,cCVAI,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,SAAW,WACT,EAAKC,UAAS,SAAAC,GAAG,MAAK,CACpBL,KAAMK,EAAIL,KAAO,O,EAGrBM,YAAc,WACZ,EAAKF,UAAS,SAAAC,GAAG,MAAK,CACpBJ,QAASI,EAAIJ,QAAU,O,EAG3BM,QAAU,WACR,EAAKH,UAAS,SAAAC,GAAG,MAAK,CACpBH,IAAKG,EAAIH,IAAM,O,EAGpBM,mBAAqB,SAACR,EAAMC,EAASC,GAElC,OADcF,EAAOC,EAAUC,G,EAIjCO,gCAAkC,SAACT,EAAMC,EAASC,GAEhD,GAAIF,EAAOC,EAAUC,IAAQ,EAC3B,OAAkBQ,KAAKC,MAAOX,GAAQA,EAAOC,EAAUC,GAAQ,M,4CAInE,WACE,OACE,qCACA,cAAC,EAAD,UACE,cAAC,EAAD,CACAjB,OAAQ2B,KAAKT,SACbjB,UAAW0B,KAAKN,YAChBnB,MAAOyB,KAAKL,YAGd,cAAC,EAAD,UACE,cAAC,EAAD,CACAtB,OAAQ2B,KAAKb,MAAMC,KACnBd,UAAW0B,KAAKb,MAAME,QACtBd,MAAOyB,KAAKb,MAAMG,IAClBT,QAASmB,KAAKJ,mBAAmBI,KAAKb,MAAMC,KAAMY,KAAKb,MAAME,QAASW,KAAKb,MAAMG,KACjFR,qBAAsBkB,KAAKH,gCAAgCG,KAAKb,MAAMC,KAAMY,KAAKb,MAAME,QAASW,KAAKb,MAAMG,gB,GAlDjGW,aAyDHf,IC7DfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,gC,kBCAhID,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,6BAA6B,MAAQ,iC,kBCAlHD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.5b98c2ef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport cs from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={cs.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport cs from \"./Feedbackoptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => (\r\n  <>\r\n    <h1 className={cs.title}>Please leave feedback</h1>\r\n    <div className={cs.btnContainer}>\r\n      <button className={cs.btn} onClick={onGood}>\r\n        Good\r\n      </button>\r\n      <button className={cs.btn} onClick={onNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button className={cs.btn} onClick={onBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onGood: PropTypes.number,\r\n  onNeutral: PropTypes.number,\r\n  onBad: PropTypes.number,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport cs from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({\r\n  onGood,\r\n  onNeutral,\r\n  onBad,\r\n  onTotal,\r\n  onPositivePercentage = \"0\",\r\n}) => (\r\n  <>\r\n    <h2 className={cs.title}>Statistics</h2>\r\n    <ul className={cs.list}>\r\n      <li className={cs.item}>Good: {onGood}</li>\r\n      <li className={cs.item}>Neutral: {onNeutral}</li>\r\n      <li className={cs.item}>Bad: {onBad}</li>\r\n    </ul>\r\n    <ul className={cs.listTotal}>\r\n      <li className={cs.item}>Total: {onTotal}</li>\r\n      <li className={cs.item}>Positive feedback: {onPositivePercentage}%</li>\r\n    </ul>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  onGood: PropTypes.number,\r\n  onNeutral: PropTypes.number,\r\n  onBad: PropTypes.number,\r\n  onTotal: PropTypes.number,\r\n  onPositivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\n// import Profile from './components/Profile/Profile';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\n\n// import user from \"./components/user.json\";\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  goodPlus = () => {\n    this.setState(old => ({\n      good: old.good + 1,\n    }));\n  };\n  neutralPlus = () => {\n    this.setState(old => ({\n      neutral: old.neutral + 1,\n    }));\n  };\n  badPlus = () => {\n    this.setState(old => ({\n      bad: old.bad + 1,\n    }));\n  };\n countTotalFeedback = (good, neutral, bad) => {\n   const total = (good + neutral + bad);\n    return total;\n  };\n  \n  countPositiveFeedbackPercentage = (good, neutral, bad) => {\n    let positive = 0;\n    if (good + neutral + bad !== 0) {\n      return positive = Math.floor((good / (good + neutral + bad)) * 100);\n   };\n  };\n\n  render() {\n    return (\n      <>\n      <Container>\n        <FeedbackOptions \n        onGood={this.goodPlus} \n        onNeutral={this.neutralPlus} \n        onBad={this.badPlus} \n        />\n      </Container>\n      <Container>\n        <Statistics \n        onGood={this.state.good} \n        onNeutral={this.state.neutral} \n        onBad={this.state.bad} \n        onTotal={this.countTotalFeedback(this.state.good, this.state.neutral, this.state.bad)} \n        onPositivePercentage={this.countPositiveFeedbackPercentage(this.state.good, this.state.neutral, this.state.bad)}/>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2qfH4\",\"list\":\"Statistics_list__84nf9\",\"item\":\"Statistics_item__14a1H\",\"listTotal\":\"Statistics_listTotal__FGhwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"Feedbackoptions_btnContainer__3dA5b\",\"btn\":\"Feedbackoptions_btn__3RWne\",\"title\":\"Feedbackoptions_title__33OP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__29W85\"};"],"sourceRoot":""}